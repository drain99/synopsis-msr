Thesis Contents:

Introduction : Synopsis Intro
  Motivation through Examples : show the Spec and C mk_list, mention bisimulation and the 3 major steps
  Our Contributions
Problem Setting and Bisimulation : intro' IR
  Equivalence Definition : define our scope
  Control-Flow-Graph Representation : intro' CFG representation
  Bisimulation Relation : intro' product program, product-CFG, invariants table
  Recursive Relations : focus on the invariants table and discuss it
Proof Discharge Algorithm through Examples : talk about being the third step, hoare triples and its lowering
  Proof Discharge Algorithm and its Soundness : big talk about its soundness
  Decomposition of Recursive Relations : intro' the basic concept and its significance
    Iterative Unification and Unrolling Procedure : intro' the algorithm and related algorithms (canonicalization)
  Categorization of Proof Obligations : intro' k-Decomposition (decompose * expand it out)
  Type I
  Type II
  Type III
  Proof Discharge Algorithm Summary
Spec to C Equivalence Checker Algorithm
  The Spec Language
  Counterexample Guided Correlation Algorithm
  Counterexample Guided Invariant Inference Algorithm
  Points-to Analysis
  Modelling Procedure Calls
Value Graph Representation
  Motivation
  Expression to Value Graph Conversion Algorithm
  Decomposition of Recursive Relations
  Approximation of Recursive Relations
  Proof Discharge Algorithm using Value Graphs
Evaluation
  Experiments
    String
    List
    Tree
    Matrix
  Results
Limitations
Conclusion

PPT Contents:

Titlecard
intro : the problem and its uses
background : related works
intro : spec and c language
example : spec and c programs
what : showing equivalence between both
contributions : bisimulation based algorithm + proof discharge algorithm
how : bisimulation
unified representation : IR and its CFG representation
product program : show the product-CFG
problem : comparing values between spec and IR
invariants : recursive relations
proof discharge algorithm : hoare triples with recursive relations
Unification and decomposition : example => LCons(x,y) = LCons(a,b) <=> x=a and y=b
Categorization
Type I : 2 slides max : pretty easy
Type II : 1 slide for depth, 1 slide for meaning of equality, 1 slide for approximation, 2 slides for each proof obligation examples
Type III : 1 slide for example, 1 slide for rewriting and decompositon, 1 slide for the 3 subproblems and solution of first 2, 1 slide for the third, 1 slide for reconstruction programs, 1 slide for bisimulation, 2 slides for points-to analysis and finalize, DONE
Other parts : 1 slide for invariants, 1 slide for correlation algorithm
evaluation : use the simplified String type (with no SInvalid), focus on the 1 example!!! very important
briefly discuss the other ones, 2 slides for each
a bit more focus on the matrix example
conclude with 2 slides : 1 for limitations (bisimilar, exponential number of equalities due to decomposition), 1 for key ideas : program representation of values + pointer analysis
Thankyou

TODO: