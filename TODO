Thesis Contents:

Introduction
Problem Setting and Equivalence Definition
Algorithm through Examples
  CFG Representation
  Product-CFG and Bisimulation
  Lifting Constructors and Recursive Relations
  Proof Obligations
  Unrolling and Unification
  Decomposition of Recursive Relations
  Category I
  Category II
    d-depth Under- and Over-Approximation
  Category III
    LHS to RHS Rewriting
    RHS Decomposition
    Conversion of Recursive Relations to Bisimulation
    Reconstruction Program
    Points-to Information in C
  SMT Encoding of Expressions and Reconstruction of Counterexamples
  Proof Discharge Algorithm Summary
Formalism
  Spec Language
  Modelling Procedure Calls
  Points-to Analysis
  Counterexample-guided Best First Search Algorithm for Product-CFG
  Counterexample-guided Invariant Inference And Counterexample Generation
    Predicate Grammar
    Inference of Bitvector Relations
    Inference of Recursive Relations
Deconstruction Program : Alternate Representation of ADT Values
  Introduction
  Scalability : Handling Pathsets
  Conversion Algorithm
  Unrolling and Unification
  Deomposition of Deconstruction Program Pairs
  d-depth Under- and Over-Approximation
  Points-to Information in C
  General Proof Discharge Algorithm
Evaluation
  Lifting Constructors and Specifications
  A String Example : strchr
  A Matrix Example : matfreq
  Results
Conclusion and Future Scope

Sunday: finalize formalism, evaluation, conclusion sections
list, tree, matrix sections : add subtables, edit text and refer to table
add figure for matrix data layouts along with the c function signatures

Monday: fully finish the examples and send to sir with the following points:
how I plan to introduce the program graph concept, should i put it in synopsis?

Synopsis Contents:

Introduction (5 pages)
  Introduce the top-level problem : taken from intro + related work
  Take the example and define the constrains of the problem we are setting to solve : intro with example
  Shortly on IRs, CFGs and product program : existing text
  Our contributions : proof discharge algorithm + recovery of counterexamples to aid in our algorithm
Proof Discharge Algorithm (10 pages)
  Shortly describe lifting constructors and recursive relations
  Introduce decomposition archieved through partial unification under a rewriting system
  Go through each of the 3 types in vague detail taking examples for each and writing about them
  Talk on the usefulness of the counterexamples : counterexample-guided correlation and invariant inference procedures (borrow heavily from Counter, state shortly on what differs)
Evaluation : put a lot of focus, try to almost everything in including the table except the lifting constructor : MUST SHOW THE STRLEN EXAMPLE (5 pages)
Conclusion : limitations (scaling for size of SMT queries, non-bisimilar specification and implementation), then whatevers is in conclusion (1 pages)

PPT Contents:

Titlecard
intro : the problem and its uses
background : related works
intro : spec and c language
example : spec and c programs
what : showing equivalence between both
contributions : bisimulation based algorithm + proof discharge algorithm
how : bisimulation
unified representation : IR and its CFG representation
product program : show the product-CFG
problem : comparing values between spec and IR
invariants : recursive relations
proof discharge algorithm : hoare triples with recursive relations
Unification and decomposition : example => LCons(x,y) = LCons(a,b) <=> x=a and y=b
Categorization
Type I : 2 slides max : pretty easy
Type II : 1 slide for depth, 1 slide for meaning of equality, 1 slide for approximation, 2 slides for each proof obligation examples
Type III : 1 slide for example, 1 slide for rewriting and decompositon, 1 slide for the 3 subproblems and solution of first 2, 1 slide for the third, 1 slide for reconstruction programs, 1 slide for bisimulation, 2 slides for points-to analysis and finalize, DONE
Other parts : 1 slide for invariants, 1 slide for correlation algorithm
evaluation : use the simplified String type (with no SInvalid), focus on the 1 example!!! very important
briefly discuss the other ones, 2 slides for each
a bit more focus on the matrix example
conclude with 2 slides : 1 for limitations (bisimilar, exponential number of equalities due to decomposition), 1 for key ideas : program representation of values + pointer analysis
Thankyou

TODO: