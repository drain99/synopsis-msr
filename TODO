Thesis Contents:

Introduction : Synopsis Intro
  Motivation through Examples : show the Spec and C mk_list, mention bisimulation and the 3 major steps
  Our Contributions
Problem Setting and Bisimulation : intro' IR
  Equivalence Definition : define our scope
  Control-Flow-Graph Representation : intro' CFG representation
  Bisimulation Relation : intro' product program, product-CFG, invariants table
  Recursive Relations : focus on the invariants table and discuss it
Proof Discharge Algorithm through Examples : talk about being the third step, hoare triples and its lowering
  Proof Discharge Algorithm and its Soundness : big talk about its soundness
  Decomposition of Recursive Relations : intro' the basic concept and its significance
    Iterative Unification and Unrolling Procedure : intro' the algorithm and related algorithms (canonicalization)
  Categorization of Proof Obligations : intro' k-Decomposition (decompose * expand it out)
  Type I
  Type II
  Type III
  Proof Discharge Algorithm Summary
Spec to C Equivalence Checker Algorithm
  The Spec Language
  Counterexample Guided Correlation Algorithm
  Counterexample Guided Invariant Inference Algorithm
  Points-to Analysis
  Modelling Procedure Calls
Value Graph Representation
  Motivation
  Expression to Value Graph Conversion Algorithm
  Decomposition of Recursive Relations
  Approximation of Recursive Relations
  Proof Discharge Algorithm using Value Graphs
Evaluation
  Experiments
    String
    List
    Tree
    Matrix
  Results
Limitations
Conclusion

PPT Contents:

Title slide
Intro to the problem and its possible applications
Background on different approaches to its solution
Example spec and c programs : introduce spec in a line or two, then contrast their differences
Objective : show equivalence between both automatically through bisimulation
Bisimulation : Intro shortly
Contributions : bisimulation based algorithm with 3 steps + focus on the proof discharge algorithm + if time permits, a bit more on the other 2 steps
Introduce the unified IR and CFG representations for the spec and c programs
Product program and show the example with invariants table
Recursive relations
Proof Discharge Algorithm
Decomposition of recursive relations
Unrolling of recursive relations
Categorization
Type I : 2 slides, 1 for each example
Type II : 2 slides, 1 for each example, then 1 slide for the approximation schemes, 2 slides for the 2 examples again
Type III : 1 slide for example, 1 slide for rewriting and decomposition, 1 slide for 3 subproblems and simplification of each, 1 slide to introduce deconstruction program, 1 slide for bisimulation, 1 slide for points-to analysis, 1 slide for points-to results for C and then on the deconstruction programs
Proof Discharge Summary
Evaluation : Introduce the tool and write the benchmarks considered
Show the 3 layouts for a string and their lifting constructors
Show the strlen programs and their product CFG with invariants
List the other ADTs and their layouts considered
Thank you slide

TODO:
update CFG with deterministic + non-blocking => DONE
update product-CFG with deterministic + non-blocking + divergence preservance + coverage + inductivity of invariants + validity of observables => DONE
update bisimulation relation with a section of intuitive proof sketch => DONE
update the evaluation section with failed tests [se on ion] => TUESDAY